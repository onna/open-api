{
    "components": {
        "schemas": {
            "ACL": {
                "properties": {
                    "@id": {
                        "type": "string"
                    },
                    "prinperm": {
                        "type": "object"
                    },
                    "prinrole": {
                        "type": "object"
                    },
                    "roleperm": {
                        "type": "object"
                    }
                },
                "title": "A set of permissions",
                "type": "object"
            },
            "AddableResource": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseResource"
                    },
                    {
                        "$ref": "#/components/schemas/WritableResource"
                    }
                ],
                "title": "Writable resource data",
                "type": "object"
            },
            "Addon": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "Addon data",
                "type": "object"
            },
            "AddonResponse": {
                "properties": {
                    "available": {
                        "items": {
                            "$ref": "#/components/schemas/Addon",
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "installed": {
                        "items": {
                            "$ref": "#/components/schemas/Addon",
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "title": "Addons response data",
                "type": "object"
            },
            "AdvancedQuery": {
                "additionalProperties": false,
                "properties": {
                    "and": {
                        "items": {
                            "$ref": "#/components/schemas/AdvancedQueryTerm"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "and"
                ],
                "title": "Query",
                "type": "object"
            },
            "AdvancedQueryTerm": {
                "oneOf": [
                    {
                        "additionalProperties": {
                            "items": {
                                "oneOf": [
                                    {
                                        "additionalProperties": false,
                                        "properties": {
                                            "var": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "oneOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "number"
                                            },
                                            {
                                                "type": "boolean"
                                            },
                                            {
                                                "items": {
                                                    "oneOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "number"
                                                        },
                                                        {
                                                            "type": "boolean"
                                                        }
                                                    ]
                                                },
                                                "type": "array"
                                            }
                                        ]
                                    }
                                ]
                            },
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array"
                        },
                        "example": {
                            "text_contains": [
                                {
                                    "var": "title"
                                },
                                "foobar"
                            ]
                        },
                        "maxProperties": 1,
                        "minProperties": 1,
                        "properties": {
                            "exists": {
                                "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "var": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "maxItems": 1,
                                "minItems": 1,
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "maxProperties": 1,
                        "minProperties": 1,
                        "properties": {
                            "and": {
                                "items": {
                                    "$ref": "#/components/schemas/AdvancedQueryTerm"
                                },
                                "type": "array"
                            },
                            "and_not": {
                                "items": {
                                    "$ref": "#/components/schemas/AdvancedQueryTerm"
                                },
                                "type": "array"
                            },
                            "or": {
                                "items": {
                                    "$ref": "#/components/schemas/AdvancedQueryTerm"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    }
                ],
                "title": "Query term"
            },
            "AllPermissions": {
                "items": {
                    "$ref": "#/components/schemas/Permissions",
                    "type": "object"
                },
                "type": "array"
            },
            "Application": {
                "properties": {
                    "databases": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "static_directory": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "static_file": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "title": "Application data",
                "type": "object"
            },
            "BaseResource": {
                "properties": {
                    "@type": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "title": "Base resource data",
                "type": "object"
            },
            "BatchQueryRequest": {
                "additionalProperties": false,
                "properties": {
                    "operation": {
                        "additionalProperties": false,
                        "properties": {
                            "endpoint": {
                                "description": "relative path for operation",
                                "type": "string"
                            },
                            "method": {
                                "enum": [
                                    "PATCH",
                                    "POST"
                                ],
                                "type": "string"
                            },
                            "payload": {
                                "type": "object"
                            }
                        },
                        "required": [
                            "method",
                            "payload"
                        ],
                        "type": "object"
                    },
                    "query": {
                        "$ref": "#/components/schemas/Query"
                    }
                },
                "required": [
                    "operation",
                    "query"
                ],
                "title": "@batchOnQuery payload",
                "type": "object"
            },
            "Behavior": {
                "properties": {
                    "behavior": {
                        "title": "Dotted name to interface",
                        "type": "string"
                    }
                },
                "required": [
                    "behavior"
                ],
                "title": "Behavior",
                "type": "object"
            },
            "BehaviorsResponse": {
                "properties": {
                    "available": {
                        "items": {
                            "title": "Dotted name to interface",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "dynamic": {
                        "items": {
                            "title": "Dotted name to interface",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "static": {
                        "items": {
                            "title": "Dotted name to interface",
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "title": "Behavior data on a resource",
                "type": "object"
            },
            "DataAPIResult": {
                "additionalProperties": false,
                "properties": {
                    "cursor": {
                        "type": "string"
                    },
                    "deleted": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "total": {
                        "type": "number"
                    },
                    "updates": {
                        "items": {
                            "$ref": "#/components/schemas/DataAPIResultItem"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "DataAPIResultItem": {
                "additionalProperties": true,
                "properties": {
                    "@assigned-roles": {
                        "additionalProperties": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "type": "object"
                    },
                    "@id": {
                        "type": "string"
                    },
                    "@timestamp": {
                        "description": "Can be used for since param",
                        "type": "string"
                    },
                    "@type": {
                        "type": "string"
                    },
                    "@uid": {
                        "type": "string"
                    },
                    "@users-permissions": {
                        "additionalProperties": {
                            "type": "boolean"
                        },
                        "type": "object"
                    },
                    "creation_date": {
                        "type": "string"
                    },
                    "creators": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "modification_date": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DatasourceCapability": {
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            },
            "DatasourceType": {
                "additionalProperties": false,
                "properties": {
                    "capabilities": {
                        "items": {
                            "$ref": "#/components/schemas/DatasourceCapability"
                        },
                        "type": "array"
                    },
                    "config_type": {
                        "type": "string"
                    },
                    "type_name": {
                        "type": "string"
                    }
                },
                "required": [
                    "type_name"
                ],
                "type": "object"
            },
            "DatasourceTypes": {
                "items": {
                    "$ref": "#/components/schemas/DatasourceType"
                },
                "type": "array"
            },
            "IdentitiesDiscoveryQuery": {
                "oneOf": [
                    {
                        "additionalProperties": false,
                        "description": "To match on all source accounts and get their mapped identities",
                        "properties": {
                            "size": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_size"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "properties": {
                            "cursor": {
                                "description": "Cursor to get more results pages",
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "cursor"
                        ],
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "properties": {
                            "filters": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_filters"
                            },
                            "size": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_size"
                            }
                        },
                        "required": [
                            "filters"
                        ],
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "properties": {
                            "query": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_query"
                            },
                            "size": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_size"
                            },
                            "suggestions": {
                                "default": false,
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "query"
                        ],
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "properties": {
                            "filters": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_filters"
                            },
                            "query": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_query"
                            },
                            "size": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_size"
                            }
                        },
                        "required": [
                            "filters",
                            "query"
                        ],
                        "type": "object"
                    }
                ]
            },
            "IdentitiesDiscoveryResponse": {
                "properties": {
                    "cursor": {
                        "default": null,
                        "description": "Use to get more results",
                        "type": "string"
                    },
                    "items": {
                        "items": {
                            "description": "Identity summary",
                            "properties": {
                                "source_accounts": {
                                    "items": {
                                        "description": "Mapped Source account summary",
                                        "properties": {
                                            "datasource_type_name": {
                                                "type": "string"
                                            },
                                            "display_name": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "full_name": {
                                                "type": "string"
                                            },
                                            "origin_id": {
                                                "type": "string"
                                            },
                                            "signature": {
                                                "type": "string"
                                            },
                                            "uuid": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "title": {
                                    "type": "string"
                                },
                                "uuid": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "matching_source_accounts": {
                        "description": "Number of accounts matching the query.",
                        "type": "integer"
                    }
                },
                "required": [
                    "cursor",
                    "items",
                    "matching_source_accounts"
                ],
                "type": "object"
            },
            "IdentitiesDiscovery_filters": {
                "additionalProperties": false,
                "properties": {
                    "config_type": {
                        "description": "Match only source accounts from the specified list of config_type",
                        "example": [
                            "eslack"
                        ],
                        "items": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 100,
                        "minItems": 1,
                        "type": "array"
                    },
                    "email_domain": {
                        "description": "Match only source account with specified email domains",
                        "example": [
                            "onna.com",
                            "amazon.es"
                        ],
                        "items": {
                            "maxLength": 200,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 1000,
                        "minItems": 1,
                        "type": "array"
                    },
                    "type_name": {
                        "description": "Match only source accounts from the specified list of type_name",
                        "example": [
                            "SlackEDatasource"
                        ],
                        "items": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        },
                        "maxItems": 100,
                        "minItems": 1,
                        "type": "array"
                    }
                },
                "title": "Filters applied to source accounts query",
                "type": "object"
            },
            "IdentitiesDiscovery_metadataField": {
                "description": "Field from the source account metadata to query on",
                "enum": [
                    "email",
                    "full_name",
                    "display_name"
                ],
                "type": "string"
            },
            "IdentitiesDiscovery_query": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/IdentitiesDiscovery_queryString"
                    },
                    {
                        "additionalProperties": false,
                        "description": "To search on a specific metadata field",
                        "example": {
                            "field": "full_name",
                            "query": "pepito"
                        },
                        "properties": {
                            "field": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_metadataField"
                            },
                            "query": {
                                "$ref": "#/components/schemas/IdentitiesDiscovery_queryString"
                            }
                        },
                        "required": [
                            "field",
                            "query"
                        ],
                        "type": "object"
                    }
                ]
            },
            "IdentitiesDiscovery_queryString": {
                "description": "Query string to match against source account metadata",
                "example": "pepito",
                "maxLength": 200,
                "minLength": 1,
                "type": "string"
            },
            "IdentitiesDiscovery_size": {
                "default": 30,
                "description": "Page results size. Maximum page size is 100.",
                "minimum": 0,
                "type": "integer"
            },
            "IdentitiesSearchQuery": {
                "oneOf": [
                    {
                        "additionalProperties": false,
                        "description": "To scroll on all identities and get their mapped source accounts",
                        "properties": {
                            "size": {
                                "$ref": "#/components/schemas/IdentitiesSearch_size"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "properties": {
                            "cursor": {
                                "description": "Cursor to get more results pages",
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "cursor"
                        ],
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "properties": {
                            "query": {
                                "$ref": "#/components/schemas/IdentitiesSearch_query"
                            },
                            "size": {
                                "$ref": "#/components/schemas/IdentitiesSearch_size"
                            }
                        },
                        "required": [
                            "query"
                        ],
                        "type": "object"
                    }
                ]
            },
            "IdentitiesSearchResponse": {
                "properties": {
                    "cursor": {
                        "default": null,
                        "description": "Use to get more results",
                        "type": "string"
                    },
                    "items": {
                        "items": {
                            "description": "Identity summary",
                            "properties": {
                                "source_accounts": {
                                    "items": {
                                        "description": "Mapped source accounts summary",
                                        "properties": {
                                            "config_type": {
                                                "type": "string"
                                            },
                                            "datasource_type_name": {
                                                "type": "string"
                                            },
                                            "display_name": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "full_name": {
                                                "type": "string"
                                            },
                                            "origin_id": {
                                                "type": "string"
                                            },
                                            "signature": {
                                                "type": "string"
                                            },
                                            "uuid": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "title": {
                                    "type": "string"
                                },
                                "uuid": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "matching_identities": {
                        "description": "Number of identities matching the query.",
                        "type": "integer"
                    }
                },
                "required": [
                    "cursor",
                    "items",
                    "matching_identities"
                ],
                "type": "object"
            },
            "IdentitiesSearch_query": {
                "description": "Query string to match against identities title",
                "example": "pepito",
                "maxLength": 200,
                "minLength": 1,
                "type": "string"
            },
            "IdentitiesSearch_size": {
                "default": 30,
                "description": "Page results size. Maximum page size is 100.",
                "minimum": 0,
                "type": "integer"
            },
            "IdentityGroup": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "maxLength": 1048576,
                        "type": "string"
                    },
                    "origin_date_created": {
                        "format": "datetime",
                        "maxLength": 50,
                        "type": "string"
                    },
                    "origin_date_modified": {
                        "format": "datetime",
                        "maxLength": 50,
                        "type": "string"
                    },
                    "origin_id": {
                        "description": "Identifier at the origin source",
                        "maxLength": 1024,
                        "type": "string"
                    },
                    "other_metadata": {
                        "additionalProperties": {
                            "oneOf": [
                                {
                                    "maxLength": 1024,
                                    "type": "string"
                                },
                                {
                                    "type": "number"
                                },
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "type": "array"
                                }
                            ]
                        },
                        "description": "Other source account group's generic metadata",
                        "maxProperties": 10,
                        "properties": {},
                        "title": "Source account other metadata",
                        "type": "object"
                    },
                    "signature": {
                        "description": "Signature/hash. Can be used by spyder to identify whether the source account data has changed",
                        "maxLength": 1024,
                        "type": "string"
                    },
                    "title": {
                        "maxLength": 1024,
                        "type": "string"
                    }
                },
                "title": "IdentityGroup",
                "type": "object"
            },
            "LegalHold": {
                "properties": {
                    "active": {
                        "default": true,
                        "type": "boolean"
                    },
                    "configuration": {
                        "oneOf": [
                            {
                                "additionalProperties": true,
                                "properties": {
                                    "datasources": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 1000,
                                        "type": "array"
                                    },
                                    "hold_type": {
                                        "enum": [
                                            "datasources"
                                        ],
                                        "type": "string"
                                    },
                                    "principals": {
                                        "default": [],
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 1000,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "datasources",
                                    "hold_type"
                                ],
                                "type": "object"
                            },
                            {
                                "additionalProperties": true,
                                "properties": {
                                    "hold_type": {
                                        "enum": [
                                            "identities"
                                        ],
                                        "type": "string"
                                    },
                                    "principals": {
                                        "default": [],
                                        "description": "Principal ids that will get legal hold notifications",
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 1000,
                                        "type": "array"
                                    },
                                    "source_accounts": {
                                        "description": "Source accounts to put on hold",
                                        "items": {
                                            "type": "string"
                                        },
                                        "maxItems": 1000,
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "source_accounts",
                                    "hold_type"
                                ],
                                "type": "object"
                            }
                        ]
                    },
                    "finished": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "notify": {
                        "default": false,
                        "type": "boolean"
                    },
                    "started": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "title": "Legal hold",
                "type": "object"
            },
            "Permissions": {
                "properties": {
                    "prinperm": {
                        "items": {
                            "$ref": "#/components/schemas/PrincipalPermission",
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "prinrole": {
                        "items": {
                            "$ref": "#/components/schemas/PrincipalRole",
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "roleperm": {
                        "items": {
                            "$ref": "#/components/schemas/RolePermission",
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "title": "Permissions defined for a resource ACL",
                "type": "object"
            },
            "PrincipalPermission": {
                "properties": {
                    "permission": {
                        "type": "string"
                    },
                    "principal": {
                        "type": "string"
                    },
                    "setting": {
                        "enum": [
                            "Allow",
                            "Deny",
                            "AllowSingle",
                            "Unset"
                        ]
                    }
                },
                "required": [
                    "principal",
                    "permission",
                    "setting"
                ],
                "title": "Permission assigned to principal",
                "type": "object"
            },
            "PrincipalPermissions": {
                "additionalProperties": false,
                "properties": {
                    "permissions": {
                        "items": {
                            "enum": [
                                "onna.GetUserActivity",
                                "onna.permission:ManageLegalHolds",
                                "onna.permission:ManageLegalHoldWorkspaces",
                                "onna.CreateAccountFields",
                                "onna.permission:ManageIdentities"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "principal": {
                        "type": "string"
                    }
                },
                "required": [
                    "principal",
                    "permissions"
                ],
                "title": "Principal permissions setting",
                "type": "object"
            },
            "PrincipalRole": {
                "properties": {
                    "principal": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "setting": {
                        "enum": [
                            "Allow",
                            "Deny",
                            "AllowSingle",
                            "Unset"
                        ]
                    }
                },
                "required": [
                    "principal",
                    "role",
                    "setting"
                ],
                "title": "Role assigned to principal",
                "type": "object"
            },
            "Query": {
                "properties": {
                    "advanced": {
                        "$ref": "#/components/schemas/AdvancedQuery"
                    },
                    "aggs_includes": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "cursor": {
                        "type": "string"
                    },
                    "excludes": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "facets": {
                        "items": {
                            "$ref": "#/components/schemas/QueryFacet"
                        },
                        "maxItems": 100,
                        "type": "array"
                    },
                    "filters": {
                        "items": {
                            "properties": {
                                "filterType": {
                                    "type": "string"
                                },
                                "filtersSelected": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "filterType"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "from": {
                        "type": "number"
                    },
                    "hide_children": {
                        "default": true,
                        "type": "boolean"
                    },
                    "highlight": {
                        "default": false,
                        "type": "boolean"
                    },
                    "includes": {
                        "oneOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "paginate": {
                        "type": "boolean"
                    },
                    "participants": {
                        "properties": {
                            "groups": {
                                "items": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "required": [
                                    "name"
                                ],
                                "type": "object"
                            }
                        },
                        "type": "object"
                    },
                    "search_after": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array"
                    },
                    "size": {
                        "default": 10,
                        "type": "number"
                    },
                    "sort": {
                        "properties": {
                            "direction": {
                                "type": "string"
                            },
                            "field": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "field",
                            "direction"
                        ],
                        "type": "object"
                    },
                    "suggest": {
                        "default": false,
                        "type": "boolean"
                    },
                    "terms": {
                        "items": {
                            "properties": {
                                "term": {
                                    "type": "string"
                                },
                                "term_type": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "term",
                                "term_type"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "title": "Query payload",
                "type": "object"
            },
            "QueryFacet": {
                "additionalProperties": false,
                "properties": {
                    "facetSelected": {
                        "$ref": "#/components/schemas/QueryFacetValue"
                    },
                    "facetType": {
                        "type": "string"
                    },
                    "facetsSelected": {
                        "$ref": "#/components/schemas/QueryFacetValue"
                    }
                },
                "title": "Query Facet",
                "type": "object"
            },
            "QueryFacetValue": {
                "items": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "number"
                        },
                        {
                            "additionalProperties": false,
                            "properties": {
                                "from": {
                                    "type": "string"
                                },
                                "to": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "additionalProperties": false,
                            "properties": {
                                "max": {
                                    "type": "number"
                                },
                                "min": {
                                    "type": "number"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    ]
                },
                "type": "array"
            },
            "RealIdentity": {
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "title": "Identity id",
                        "type": "string"
                    },
                    "onna_user": {
                        "title": "Onna user",
                        "type": "string"
                    },
                    "source_accounts": {
                        "items": {
                            "title": "Source account id",
                            "type": "string"
                        },
                        "title": "Source accounts",
                        "type": "array"
                    },
                    "title": {
                        "title": "Identity name",
                        "type": "string"
                    }
                },
                "required": [
                    "title"
                ],
                "title": "Create a new identity",
                "type": "object"
            },
            "RealIdentityPATCH": {
                "additionalProperties": false,
                "properties": {
                    "onna_user": {
                        "title": "Onna user",
                        "type": "string"
                    },
                    "source_accounts": {
                        "items": {
                            "title": "Source account id",
                            "type": "string"
                        },
                        "title": "Source accounts",
                        "type": "array"
                    },
                    "title": {
                        "title": "Identity name",
                        "type": "string"
                    }
                },
                "title": "Modify an existing identity",
                "type": "object"
            },
            "Resource": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/WritableResource"
                    },
                    {
                        "properties": {
                            "@id": {
                                "type": "string"
                            },
                            "@type": {
                                "type": "string"
                            },
                            "parent": {
                                "properties": {
                                    "@id": {
                                        "type": "string"
                                    },
                                    "@type": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "required": [
                            "@id",
                            "@type"
                        ],
                        "type": "object"
                    }
                ],
                "title": "Resource data",
                "type": "object"
            },
            "ResourceACL": {
                "properties": {
                    "inherit": {
                        "items": {
                            "$ref": "#/components/schemas/ACL",
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "local": {
                        "$ref": "#/components/schemas/ACL",
                        "type": "object"
                    }
                },
                "title": "All permissions for an object",
                "type": "object"
            },
            "ResourceFolder": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Resource"
                    },
                    {
                        "properties": {
                            "items": {
                                "$ref": "#/components/schemas/Resource",
                                "type": "object"
                            },
                            "length": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "title": "Resource folder data",
                "type": "object"
            },
            "RolePermission": {
                "properties": {
                    "permission": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "setting": {
                        "enum": [
                            "Allow",
                            "Deny",
                            "AllowSingle",
                            "Unset"
                        ]
                    }
                },
                "required": [
                    "role",
                    "permission",
                    "setting"
                ],
                "title": "Permission assigned to role",
                "type": "object"
            },
            "SearchQuery": {
                "properties": {
                    "__eq": {
                        "type": "string"
                    },
                    "__gt": {
                        "type": "string"
                    },
                    "__gte": {
                        "type": "string"
                    },
                    "__in": {
                        "type": "string"
                    },
                    "__lt": {
                        "type": "string"
                    },
                    "__lte": {
                        "type": "string"
                    },
                    "__not": {
                        "type": "string"
                    },
                    "_from": {
                        "type": "string"
                    },
                    "_metadata": {
                        "type": "string"
                    },
                    "_metadata_not": {
                        "type": "string"
                    },
                    "_size": {
                        "type": "string"
                    },
                    "_sort_asc": {
                        "type": "string"
                    },
                    "_sort_des": {
                        "type": "string"
                    },
                    "term": {
                        "type": "string"
                    }
                },
                "title": "Search Query",
                "type": "object"
            },
            "SearchResult": {
                "properties": {},
                "title": "Search result",
                "type": "object"
            },
            "SearchResults": {
                "properties": {
                    "items_count": {
                        "type": "integer"
                    },
                    "member": {
                        "items": {
                            "$ref": "#/components/schemas/SearchResult",
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "member"
                ],
                "title": "Search results",
                "type": "object"
            },
            "SourceAccount": {
                "additionalProperties": false,
                "properties": {
                    "active": {
                        "title": "Active account",
                        "type": "boolean"
                    },
                    "address": {
                        "title": "Address",
                        "type": "string"
                    },
                    "city": {
                        "title": "City",
                        "type": "string"
                    },
                    "company_name": {
                        "title": "Company name",
                        "type": "string"
                    },
                    "country": {
                        "title": "Country",
                        "type": "string"
                    },
                    "deactivation_date": {
                        "format": "datetime",
                        "maxLength": 50,
                        "type": "string"
                    },
                    "display_name": {
                        "title": "Display name",
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "minLength": 1,
                        "title": "Email",
                        "type": "string"
                    },
                    "employee_department": {
                        "title": "Employee department",
                        "type": "string"
                    },
                    "employee_division": {
                        "title": "Employee division",
                        "type": "string"
                    },
                    "employee_title": {
                        "title": "Employee title",
                        "type": "string"
                    },
                    "first_name": {
                        "title": "First name",
                        "type": "string"
                    },
                    "full_name": {
                        "title": "Full name",
                        "type": "string"
                    },
                    "last_name": {
                        "title": "Last name",
                        "type": "string"
                    },
                    "origin_id": {
                        "description": "Identifier for an source account existing at a source",
                        "title": "SourceAccount identifier at the origin",
                        "type": "string"
                    },
                    "other_metadata": {
                        "additionalProperties": {
                            "oneOf": [
                                {
                                    "maxLength": 1024,
                                    "type": "string"
                                },
                                {
                                    "type": "number"
                                },
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "maxItems": 50,
                                    "type": "array"
                                }
                            ]
                        },
                        "description": "Other source account's generic metadata",
                        "maxProperties": 10,
                        "properties": {},
                        "title": "Source account other metadata",
                        "type": "object"
                    },
                    "phone": {
                        "title": "Phone",
                        "type": "string"
                    },
                    "signature": {
                        "description": "Source account signature/hash. Can be used by spyder to identify whether the source account data has changed",
                        "title": "Source account signature",
                        "type": "string"
                    },
                    "state": {
                        "title": "State",
                        "type": "string"
                    },
                    "zipcode": {
                        "title": "Zip code",
                        "type": "string"
                    }
                },
                "required": [
                    "signature",
                    "origin_id"
                ],
                "title": "SourceAccount",
                "type": "object"
            },
            "UpdatePrincipalPermissions": {
                "items": {
                    "$ref": "#/components/schemas/PrincipalPermissions",
                    "type": "object"
                },
                "title": "Update a set of principals permissions",
                "type": "array"
            },
            "UpdateRegistry": {
                "properties": {
                    "value": {}
                },
                "required": [
                    "value"
                ],
                "title": "Update registry",
                "type": "object"
            },
            "UserSearchResult": {
                "properties": {
                    "num_x_page": {
                        "description": "Number per page",
                        "type": "number"
                    },
                    "page": {
                        "description": "Page of results",
                        "type": "number"
                    },
                    "result": {
                        "items": {
                            "properties": {
                                "blocked": {
                                    "type": "boolean"
                                },
                                "cn": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "mail": {
                                    "type": "string"
                                },
                                "sn": {
                                    "type": "string"
                                }
                            }
                        },
                        "type": "array"
                    },
                    "total": {
                        "description": "Number number of results",
                        "type": "number"
                    }
                },
                "title": "User Search Result",
                "type": "object"
            },
            "WritableResource": {
                "properties": {
                    "title": {
                        "type": "string"
                    }
                },
                "title": "Writable resource data",
                "type": "object"
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "description": "Authentication to the API is performed via [HTTP Basic Auth](http://en.wikipedia.org/wiki/Basic_access_authentication).\n\nAll API requests must be made over [HTTPS](http://en.wikipedia.org/wiki/HTTP_Secure).",
                "scheme": "basic",
                "type": "http"
            },
            "bearerAuth": {
                "bearerFormat": "JWT",
                "scheme": "bearer",
                "type": "http"
            }
        }
    },
    "externalDocs": {
        "description": "Onna Developer Documentation",
        "url": "https://developers.onna.com"
    },
    "info": {
        "contact": {
            "email": "support@onna.com",
            "name": "Onna Support",
            "url": "https://support.onna.com"
        },
        "description": "REST API for Onna\n\n# Introduction\nThe API is the central hub for access and updating data related to Onna.\n\n## Requirements\nAccess to the Onna API requires that you have an active account.\n\nYou can sign up for an Onna account by filling out the [registration form](https://register.onna.com/signup?trial=true).",
        "title": "Onna API",
        "version": "1.0.5"
    },
    "openapi": "3.0.2",
    "paths": {
        "/{account_id}/@frontsearch": {
            "post": {
                "description": "Run a search.\n\nSee the [reference documentation](https://developers.onna.com/tutorials/search-filter/search-and-triggers.html#search). \u301c permission: guillotina.SearchContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Query"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Search completed"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.SearchContent"
                        ]
                    }
                ],
                "summary": "Searches for discussions between users",
                "tags": [
                    "Search"
                ]
            }
        },
        "/{account_id}/@getAccountFields": {
            "get": {
                "description": "Get custom fields in an account \u301c permission: onna.ViewAccountFields",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "successful operation."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:onna.ViewAccountFields"
                        ]
                    }
                ],
                "summary": "Get custom fields in an account",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{account_id}/@groups": {
            "get": {
                "description": "Retrieves a list of all types of groups including `people groups` as well as `workspaces` that a user is part of.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "groupType",
                        "schema": {
                            "default": "PEOPLE_GROUP",
                            "enum": [
                                "PEOPLE_GROUP",
                                "WORK_SPACE",
                                "ALL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Gets a list of all groups in the current container.",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{account_id}/@groups/{group_id}": {
            "get": {
                "description": "Retrieves a list of all types of groups including `people groups` as well as `workspaces` that a user is part of.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "group_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Gets a list of all groups in the current container.",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{account_id}/@oauthgetcode": {
            "get": {
                "description": "permission: guillotina.GetOAuthGrant",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.GetOAuthGrant"
                        ]
                    }
                ],
                "summary": "Grant access with OAuth 2.0",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{account_id}/@statusAccount": {
            "get": {
                "description": "Get the account status \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Get the account status",
                "tags": [
                    "Account"
                ]
            }
        },
        "/{account_id}/workspaces": {
            "post": {
                "description": "permission: guillotina.AddContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddableResource"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceFolder"
                                }
                            }
                        },
                        "description": "Resource data"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AddContent"
                        ]
                    }
                ],
                "summary": "Add new resouce inside this container resource",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{account_id}/workspaces/{workspace_name}/@sharing": {
            "get": {
                "description": "permission: guillotina.SeePermissions",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Workspace",
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceACL"
                                }
                            }
                        },
                        "description": "All the sharing defined on this resource"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.SeePermissions"
                        ]
                    }
                ],
                "summary": "Get sharing settings for this resource",
                "tags": [
                    "Auth",
                    "Content"
                ]
            },
            "post": {
                "description": "Change permissions for a resource \u301c permission: guillotina.ChangePermissions",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Workspace",
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Permissions"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully changed permission"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ChangePermissions"
                        ]
                    }
                ],
                "summary": "Change permissions for a resource",
                "tags": [
                    "Auth",
                    "Content"
                ]
            }
        },
        "/{account_id}/workspaces/{workspace_name}/{datasource_name}": {
            "get": {
                "description": "permission: guillotina.ViewContent",
                "parameters": [
                    {
                        "in": "query",
                        "name": "include",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "omit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Workspace",
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Datasource",
                        "in": "path",
                        "name": "datasource_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResourceFolder"
                                        },
                                        {
                                            "properties": {
                                                "guillotina.behaviors.dublincore.IDublinCore": {
                                                    "properties": {
                                                        "contributors": {
                                                            "description": "The unqualified Dublin Core 'Contributor' element values",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "maxItems": 10000,
                                                            "title": "Contributors",
                                                            "type": "array"
                                                        },
                                                        "creation_date": {
                                                            "description": "The date and time that an object is created. \nThis is normally set automatically.",
                                                            "format": "date-time",
                                                            "title": "Added to Onna",
                                                            "type": "string"
                                                        },
                                                        "creators": {
                                                            "description": "The unqualified Dublin Core 'Creator' element values",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "maxItems": 1000,
                                                            "title": "Creators",
                                                            "type": "array"
                                                        },
                                                        "description": {
                                                            "description": "The first unqualified Dublin Core 'Description' element value.",
                                                            "title": "Description",
                                                            "type": "string"
                                                        },
                                                        "effective_date": {
                                                            "description": "The date and time that an object should be published. ",
                                                            "format": "date-time",
                                                            "title": "Effective date",
                                                            "type": "string"
                                                        },
                                                        "expiration_date": {
                                                            "description": "The date and time that the object should become unpublished.",
                                                            "format": "date-time",
                                                            "title": "Expiration date",
                                                            "type": "string"
                                                        },
                                                        "modification_date": {
                                                            "description": "The date and time that the object was last modified in a\nmeaningful way.",
                                                            "format": "date-time",
                                                            "title": "Last update",
                                                            "type": "string"
                                                        },
                                                        "publisher": {
                                                            "description": "The first unqualified Dublin Core 'Publisher' element value.",
                                                            "title": "Publisher",
                                                            "type": "string"
                                                        },
                                                        "tags": {
                                                            "description": "The unqualified Dublin Core 'Tags' element values",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "maxItems": 10000,
                                                            "title": "Tags",
                                                            "type": "array"
                                                        },
                                                        "title": {
                                                            "description": "The first unqualified Dublin Core 'Title' element value.",
                                                            "title": "Title",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "onna.canonical.behaviors.following.IFollowing": {
                                                    "properties": {
                                                        "favorite": {
                                                            "title": "Current user has it favorited",
                                                            "type": "boolean"
                                                        },
                                                        "favorites": {
                                                            "items": {
                                                                "title": "follower",
                                                                "type": "string"
                                                            },
                                                            "maxItems": 10000,
                                                            "title": "favorites",
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Resource data"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "Retrieves serialization of resource",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{account_id}/workspaces/{workspace_name}/{datasource_name}/@getAllChildren": {
            "get": {
                "description": "Leverages [Elasticsearch](https://www.elastic.co/elasticsearch/) to get all the children of a resource \u301c permission: guillotina.AccessContent",
                "parameters": [
                    {
                        "in": "query",
                        "name": "page_size",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "scroll",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Workspace",
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Datasource",
                        "in": "path",
                        "name": "datasource_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cursor": {
                                            "type": "string"
                                        },
                                        "items": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Return list page of all children paths"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Retrieve all children of a resource, with included data",
                "tags": [
                    "Content",
                    "Search"
                ]
            }
        },
        "/{account_id}/workspaces/{workspace_name}/{datasource_name}/@sharing": {
            "get": {
                "description": "permission: guillotina.SeePermissions",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Workspace",
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Datasource",
                        "in": "path",
                        "name": "datasource_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceACL"
                                }
                            }
                        },
                        "description": "All the sharing defined on this resource"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.SeePermissions"
                        ]
                    }
                ],
                "summary": "Get sharing settings for this resource",
                "tags": [
                    "Auth",
                    "Content"
                ]
            },
            "post": {
                "description": "Change permissions for a resource \u301c permission: guillotina.ChangePermissions",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Workspace",
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Datasource",
                        "in": "path",
                        "name": "datasource_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Permissions"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully changed permission"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ChangePermissions"
                        ]
                    }
                ],
                "summary": "Change permissions for a resource",
                "tags": [
                    "Auth",
                    "Content"
                ]
            }
        },
        "/{account_id}/workspaces/{workspace_name}/{datasource_name}/@size": {
            "get": {
                "description": "Get size of all children \u301c permission: guillotina.ViewContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Workspace",
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Datasource",
                        "in": "path",
                        "name": "datasource_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "bytes_processed": {
                                            "type": "number"
                                        },
                                        "doc_count": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Calculated size of resources inside this parent"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "retrieves the size of the datasource",
                "tags": [
                    "Workspace",
                    "Content"
                ]
            }
        },
        "/{account_id}/workspaces/{workspace_name}/{datasource_name}/{resource_name}": {
            "get": {
                "description": "permission: guillotina.ViewContent",
                "parameters": [
                    {
                        "in": "query",
                        "name": "include",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "omit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Workspace",
                        "in": "path",
                        "name": "workspace_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Datasource",
                        "in": "path",
                        "name": "datasource_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Resource name",
                        "in": "path",
                        "name": "resource_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResourceFolder"
                                        },
                                        {
                                            "properties": {
                                                "guillotina.behaviors.dublincore.IDublinCore": {
                                                    "properties": {
                                                        "contributors": {
                                                            "description": "The unqualified Dublin Core 'Contributor' element values",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "maxItems": 10000,
                                                            "title": "Contributors",
                                                            "type": "array"
                                                        },
                                                        "creation_date": {
                                                            "description": "The date and time that an object is created. \nThis is normally set automatically.",
                                                            "format": "date-time",
                                                            "title": "Added to Onna",
                                                            "type": "string"
                                                        },
                                                        "creators": {
                                                            "description": "The unqualified Dublin Core 'Creator' element values",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "maxItems": 1000,
                                                            "title": "Creators",
                                                            "type": "array"
                                                        },
                                                        "description": {
                                                            "description": "The first unqualified Dublin Core 'Description' element value.",
                                                            "title": "Description",
                                                            "type": "string"
                                                        },
                                                        "effective_date": {
                                                            "description": "The date and time that an object should be published. ",
                                                            "format": "date-time",
                                                            "title": "Effective date",
                                                            "type": "string"
                                                        },
                                                        "expiration_date": {
                                                            "description": "The date and time that the object should become unpublished.",
                                                            "format": "date-time",
                                                            "title": "Expiration date",
                                                            "type": "string"
                                                        },
                                                        "modification_date": {
                                                            "description": "The date and time that the object was last modified in a\nmeaningful way.",
                                                            "format": "date-time",
                                                            "title": "Last update",
                                                            "type": "string"
                                                        },
                                                        "publisher": {
                                                            "description": "The first unqualified Dublin Core 'Publisher' element value.",
                                                            "title": "Publisher",
                                                            "type": "string"
                                                        },
                                                        "tags": {
                                                            "description": "The unqualified Dublin Core 'Tags' element values",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "maxItems": 10000,
                                                            "title": "Tags",
                                                            "type": "array"
                                                        },
                                                        "title": {
                                                            "description": "The first unqualified Dublin Core 'Title' element value.",
                                                            "title": "Title",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "onna.canonical.behaviors.conversation.IConversation": {
                                                    "properties": {
                                                        "created_by": {
                                                            "items": {
                                                                "properties": {},
                                                                "title": "Thread created by",
                                                                "type": "object"
                                                            },
                                                            "maxItems": 100,
                                                            "title": "JSON Message",
                                                            "type": "array"
                                                        },
                                                        "thread_id": {
                                                            "title": "Conversation ID",
                                                            "type": "string"
                                                        },
                                                        "thread_name": {
                                                            "title": "Conversation name",
                                                            "type": "string"
                                                        },
                                                        "thread_type": {
                                                            "title": "Conversation type",
                                                            "type": "string"
                                                        },
                                                        "updated_by": {
                                                            "items": {
                                                                "properties": {},
                                                                "title": "Thread updated by",
                                                                "type": "object"
                                                            },
                                                            "maxItems": 100,
                                                            "title": "JSON Message",
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "onna.canonical.behaviors.following.IFollowing": {
                                                    "properties": {
                                                        "favorite": {
                                                            "title": "Current user has it favorited",
                                                            "type": "boolean"
                                                        },
                                                        "favorites": {
                                                            "items": {
                                                                "title": "follower",
                                                                "type": "string"
                                                            },
                                                            "maxItems": 10000,
                                                            "title": "favorites",
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "onna.canonical.behaviors.machine_learning.IMachineLearning": {
                                                    "properties": {
                                                        "classification": {
                                                            "items": {
                                                                "properties": {
                                                                    "model_version": {
                                                                        "type": "number"
                                                                    },
                                                                    "proba": {
                                                                        "type": "number"
                                                                    },
                                                                    "term": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "title": "term",
                                                                "type": "object"
                                                            },
                                                            "maxItems": 500,
                                                            "title": "Classification",
                                                            "type": "array"
                                                        },
                                                        "entities_company": {
                                                            "items": {
                                                                "minLength": 1,
                                                                "title": "company",
                                                                "type": "string"
                                                            },
                                                            "maxItems": 1000,
                                                            "title": "Company entities",
                                                            "type": "array"
                                                        },
                                                        "entities_email": {
                                                            "items": {
                                                                "minLength": 1,
                                                                "title": "email",
                                                                "type": "string"
                                                            },
                                                            "maxItems": 1000,
                                                            "title": "Email entities",
                                                            "type": "array"
                                                        },
                                                        "entities_location": {
                                                            "items": {
                                                                "minLength": 1,
                                                                "title": "location",
                                                                "type": "string"
                                                            },
                                                            "maxItems": 1000,
                                                            "title": "Location entities",
                                                            "type": "array"
                                                        },
                                                        "entities_other": {
                                                            "items": {
                                                                "additionalProperties": false,
                                                                "properties": {
                                                                    "end": {
                                                                        "type": "integer"
                                                                    },
                                                                    "entity": {
                                                                        "type": "string"
                                                                    },
                                                                    "score": {
                                                                        "type": "number"
                                                                    },
                                                                    "start": {
                                                                        "type": "integer"
                                                                    },
                                                                    "type": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "entity",
                                                                    "type",
                                                                    "score",
                                                                    "start",
                                                                    "end"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "maxItems": 1000,
                                                            "title": "Other Entities",
                                                            "type": "array"
                                                        },
                                                        "entities_person": {
                                                            "items": {
                                                                "minLength": 1,
                                                                "title": "person",
                                                                "type": "string"
                                                            },
                                                            "maxItems": 500,
                                                            "title": "Person entities",
                                                            "type": "array"
                                                        },
                                                        "extra_fields": {
                                                            "additionalProperties": {
                                                                "items": {
                                                                    "properties": {
                                                                        "boolean": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "comment": {
                                                                            "type": "string"
                                                                        },
                                                                        "confirmed": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "date": {
                                                                            "format": "date-time",
                                                                            "type": "string"
                                                                        },
                                                                        "float": {
                                                                            "type": "number"
                                                                        },
                                                                        "integer": {
                                                                            "type": "number"
                                                                        },
                                                                        "keyword": {
                                                                            "type": "string"
                                                                        },
                                                                        "text": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "maxItems": 100,
                                                                "type": "array"
                                                            },
                                                            "maxProperties": 500,
                                                            "properties": {},
                                                            "type": "object"
                                                        },
                                                        "language": {
                                                            "title": "Detected language",
                                                            "type": "string"
                                                        },
                                                        "nist": {
                                                            "title": "NIST file",
                                                            "type": "boolean"
                                                        },
                                                        "sentiment": {
                                                            "title": "Sentiment polarity",
                                                            "type": "number"
                                                        },
                                                        "sentiment_subjectivity": {
                                                            "title": "Sentiment subjectivity",
                                                            "type": "number"
                                                        },
                                                        "summary": {
                                                            "title": "Summary text extraction",
                                                            "type": "string"
                                                        },
                                                        "text_addition": {
                                                            "title": "Image recognition",
                                                            "type": "string"
                                                        },
                                                        "topification": {
                                                            "items": {
                                                                "properties": {
                                                                    "model_version": {
                                                                        "type": "number"
                                                                    },
                                                                    "proba": {
                                                                        "type": "number"
                                                                    },
                                                                    "term": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "title": "term",
                                                                "type": "object"
                                                            },
                                                            "maxItems": 500,
                                                            "title": "Topification",
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "onna.canonical.behaviors.metadata.IMetadata": {
                                                    "properties": {
                                                        "application_name": {
                                                            "title": "Application name",
                                                            "type": "string"
                                                        },
                                                        "author": {
                                                            "title": "Author",
                                                            "type": "string"
                                                        },
                                                        "company": {
                                                            "title": "Company",
                                                            "type": "string"
                                                        },
                                                        "content_hash": {
                                                            "title": "Content hash",
                                                            "type": "string"
                                                        },
                                                        "content_length": {
                                                            "title": "File size",
                                                            "type": "number"
                                                        },
                                                        "content_type": {
                                                            "title": "Content type",
                                                            "type": "string"
                                                        },
                                                        "date_created": {
                                                            "format": "date-time",
                                                            "title": "File creation",
                                                            "type": "string"
                                                        },
                                                        "date_modified": {
                                                            "format": "date-time",
                                                            "title": "File last modified",
                                                            "type": "string"
                                                        },
                                                        "duration": {
                                                            "title": "Duration",
                                                            "type": "number"
                                                        },
                                                        "extension": {
                                                            "title": "Extension",
                                                            "type": "string"
                                                        },
                                                        "extracted_text": {
                                                            "properties": {
                                                                "content_type": {
                                                                    "description": "The content type identifies the type of data.",
                                                                    "title": "Content Type",
                                                                    "type": "string"
                                                                },
                                                                "extension": {
                                                                    "title": "Extension of the file",
                                                                    "type": "string"
                                                                },
                                                                "filename": {
                                                                    "title": "Filename",
                                                                    "type": "string"
                                                                },
                                                                "md5": {
                                                                    "title": "MD5",
                                                                    "type": "string"
                                                                },
                                                                "size": {
                                                                    "title": "Size",
                                                                    "type": "number"
                                                                }
                                                            },
                                                            "title": "Extracted text",
                                                            "type": "object"
                                                        },
                                                        "first_sync_last": {
                                                            "title": "Last file of first sync",
                                                            "type": "boolean"
                                                        },
                                                        "md5": {
                                                            "title": "MD5 hash",
                                                            "type": "string"
                                                        },
                                                        "other_metadata": {
                                                            "properties": {},
                                                            "title": "Other document metadata",
                                                            "type": "object",
                                                            "x-dynamic": false
                                                        },
                                                        "processing_date": {
                                                            "title": "Processed in Onna",
                                                            "type": "string"
                                                        },
                                                        "processing_exception": {
                                                            "title": "Processing exception",
                                                            "type": "string"
                                                        },
                                                        "processing_title": {
                                                            "title": "File title",
                                                            "type": "string"
                                                        },
                                                        "resource_name": {
                                                            "title": "File name",
                                                            "type": "string"
                                                        },
                                                        "screenshot": {
                                                            "properties": {
                                                                "content_type": {
                                                                    "description": "The content type identifies the type of data.",
                                                                    "title": "Content Type",
                                                                    "type": "string"
                                                                },
                                                                "extension": {
                                                                    "title": "Extension of the file",
                                                                    "type": "string"
                                                                },
                                                                "filename": {
                                                                    "title": "Filename",
                                                                    "type": "string"
                                                                },
                                                                "md5": {
                                                                    "title": "MD5",
                                                                    "type": "string"
                                                                },
                                                                "size": {
                                                                    "title": "Size",
                                                                    "type": "number"
                                                                }
                                                            },
                                                            "title": "Screenshot",
                                                            "type": "object"
                                                        },
                                                        "thumbnail": {
                                                            "title": "Thumbnail",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "onna.canonical.behaviors.origin.IOrigin": {
                                                    "properties": {
                                                        "filter": {
                                                            "title": "Synced folder or label in source",
                                                            "type": "string"
                                                        },
                                                        "origin": {
                                                            "title": "URL to original file",
                                                            "type": "string"
                                                        },
                                                        "origin_created_by": {
                                                            "items": {
                                                                "properties": {},
                                                                "type": "object"
                                                            },
                                                            "maxItems": 1000,
                                                            "title": "List of creators in source",
                                                            "type": "array"
                                                        },
                                                        "origin_date_created": {
                                                            "format": "date-time",
                                                            "title": "Source {{type}} created on",
                                                            "type": "string"
                                                        },
                                                        "origin_date_modified": {
                                                            "format": "date-time",
                                                            "title": "Source {{type}} updated on",
                                                            "type": "string"
                                                        },
                                                        "origin_display_id": {
                                                            "title": "Source display id",
                                                            "type": "string"
                                                        },
                                                        "origin_exception": {
                                                            "title": "Exception",
                                                            "type": "string"
                                                        },
                                                        "origin_folder_path": {
                                                            "type": "string"
                                                        },
                                                        "origin_has_deletions": {
                                                            "title": "The resource includes deletions",
                                                            "type": "boolean"
                                                        },
                                                        "origin_has_editions": {
                                                            "title": "The resource includes editions",
                                                            "type": "boolean"
                                                        },
                                                        "origin_has_reactions": {
                                                            "title": "The resource includes reactions",
                                                            "type": "boolean"
                                                        },
                                                        "origin_id": {
                                                            "title": "Source {{type}} ID",
                                                            "type": "string"
                                                        },
                                                        "origin_is_archived": {
                                                            "title": "The resource was archived",
                                                            "type": "boolean"
                                                        },
                                                        "origin_label_ids": {
                                                            "items": {
                                                                "title": "Folder or label id",
                                                                "type": "string"
                                                            },
                                                            "maxItems": 5000,
                                                            "title": "Synced folder or label ID in source",
                                                            "type": "array"
                                                        },
                                                        "origin_md5": {
                                                            "title": "Source {{type}} MD5",
                                                            "type": "string"
                                                        },
                                                        "origin_modified_by": {
                                                            "items": {
                                                                "properties": {},
                                                                "type": "object"
                                                            },
                                                            "maxItems": 1000,
                                                            "title": "List of modifiers in source",
                                                            "type": "array"
                                                        },
                                                        "origin_other_metadata": {
                                                            "properties": {},
                                                            "title": "Other source metadata",
                                                            "type": "object",
                                                            "x-dynamic": false
                                                        },
                                                        "origin_related_users": {
                                                            "items": {
                                                                "properties": {},
                                                                "type": "object"
                                                            },
                                                            "maxItems": 5000,
                                                            "title": "Origin list of related users",
                                                            "type": "array"
                                                        },
                                                        "origin_resource_kind": {
                                                            "enum": [
                                                                "ticket/github.issue",
                                                                "ticket/github.pr",
                                                                "ticket/zendesk",
                                                                "conversation/slack.im",
                                                                "conversation/slack.mpim",
                                                                "conversation/slack.channel",
                                                                "conversation/slack.group",
                                                                "conversation/hangouts",
                                                                "conversation/twitter",
                                                                "post/workplace",
                                                                "post/twitter",
                                                                "channel/slack",
                                                                "meeting/zoom.meeting",
                                                                "meeting/zoom.instance",
                                                                "meeting/zoom.chat",
                                                                "meeting/zoom.transcript"
                                                            ],
                                                            "title": "Type of resource",
                                                            "type": "string"
                                                        },
                                                        "origin_server_modified": {
                                                            "format": "date-time",
                                                            "title": "Last modified in source",
                                                            "type": "string"
                                                        },
                                                        "origin_shared": {
                                                            "additionalProperties": false,
                                                            "properties": {
                                                                "is_link": {
                                                                    "default": false,
                                                                    "description": "Resource shared using public link",
                                                                    "type": "boolean"
                                                                },
                                                                "last_shared": {
                                                                    "description": "Resource shared date",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "shared_by": {
                                                                    "description": "List of users sharing the resource",
                                                                    "items": {
                                                                        "properties": {},
                                                                        "type": "object"
                                                                    },
                                                                    "maxItems": 100,
                                                                    "type": "array"
                                                                },
                                                                "shared_with": {
                                                                    "description": "List of users with access permissions",
                                                                    "items": {
                                                                        "properties": {},
                                                                        "type": "object"
                                                                    },
                                                                    "maxItems": 100,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "title": "Resource sharing information",
                                                            "type": "object"
                                                        },
                                                        "origin_state": {
                                                            "title": "Source state",
                                                            "type": "string"
                                                        },
                                                        "origin_targeted_users": {
                                                            "items": {
                                                                "title": "User",
                                                                "type": "string"
                                                            },
                                                            "maxItems": 5000,
                                                            "title": "List of users collected for",
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Resource data"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "Retrieves serialization of resource",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{account_id}/{username}/@enabledDSTypes": {
            "get": {
                "description": "Retrieves a list of Datasource types enabled for this user",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.AccessContent"
                        ]
                    }
                ],
                "summary": "Gets a list of enabled Datasource types",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{account_id}/{username}/@exports": {
            "get": {
                "description": "Retrieves all exports belonging to a user, including expired.",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "Gets user's exports",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{account_id}/{username}/@rules": {
            "get": {
                "description": "Get user's rules \u301c permission: guillotina.ViewContent",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "",
                "tags": [
                    "Content"
                ]
            }
        },
        "/{account_id}/{username}/{datasource_name}/@sharing": {
            "get": {
                "description": "permission: guillotina.SeePermissions",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Datasource",
                        "in": "path",
                        "name": "datasource_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceACL"
                                }
                            }
                        },
                        "description": "All the sharing defined on this resource"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.SeePermissions"
                        ]
                    }
                ],
                "summary": "Get sharing settings for this resource",
                "tags": [
                    "Auth",
                    "Content"
                ]
            },
            "post": {
                "description": "Change permissions for a resource \u301c permission: guillotina.ChangePermissions",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Datasource",
                        "in": "path",
                        "name": "datasource_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Permissions"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully changed permission"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ChangePermissions"
                        ]
                    }
                ],
                "summary": "Change permissions for a resource",
                "tags": [
                    "Auth",
                    "Content"
                ]
            }
        },
        "/{account_id}/{username}/{datasource_name}/ed024e9224aa438f802b234d7b0bf057/{resource_name}": {
            "get": {
                "description": "permission: guillotina.SeePermissions",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Datasource",
                        "in": "path",
                        "name": "datasource_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Resource name",
                        "in": "path",
                        "name": "resource_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceACL"
                                }
                            }
                        },
                        "description": "All the sharing defined on this resource"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.SeePermissions"
                        ]
                    }
                ],
                "summary": "Get sharing settings for this resource",
                "tags": [
                    "Auth",
                    "Content"
                ]
            },
            "post": {
                "description": "Change permissions for a resource \u301c permission: guillotina.ChangePermissions",
                "parameters": [
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Datasource",
                        "in": "path",
                        "name": "datasource_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Resource name",
                        "in": "path",
                        "name": "resource_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Permissions"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully changed permission"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ChangePermissions"
                        ]
                    }
                ],
                "summary": "Change permissions for a resource",
                "tags": [
                    "Auth",
                    "Content"
                ]
            }
        },
        "/{account_id}/{username}/{datasource_name}/{resource_name}": {
            "get": {
                "description": "permission: guillotina.ViewContent",
                "parameters": [
                    {
                        "in": "query",
                        "name": "include",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "omit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Account ID",
                        "in": "path",
                        "name": "account_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Username",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Datasource",
                        "in": "path",
                        "name": "datasource_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Resource name",
                        "in": "path",
                        "name": "resource_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/ResourceFolder"
                                        },
                                        {
                                            "properties": {
                                                "guillotina.behaviors.dublincore.IDublinCore": {
                                                    "properties": {
                                                        "contributors": {
                                                            "description": "The unqualified Dublin Core 'Contributor' element values",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "maxItems": 10000,
                                                            "title": "Contributors",
                                                            "type": "array"
                                                        },
                                                        "creation_date": {
                                                            "description": "The date and time that an object is created. \nThis is normally set automatically.",
                                                            "format": "date-time",
                                                            "title": "Added to Onna",
                                                            "type": "string"
                                                        },
                                                        "creators": {
                                                            "description": "The unqualified Dublin Core 'Creator' element values",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "maxItems": 1000,
                                                            "title": "Creators",
                                                            "type": "array"
                                                        },
                                                        "description": {
                                                            "description": "The first unqualified Dublin Core 'Description' element value.",
                                                            "title": "Description",
                                                            "type": "string"
                                                        },
                                                        "effective_date": {
                                                            "description": "The date and time that an object should be published. ",
                                                            "format": "date-time",
                                                            "title": "Effective date",
                                                            "type": "string"
                                                        },
                                                        "expiration_date": {
                                                            "description": "The date and time that the object should become unpublished.",
                                                            "format": "date-time",
                                                            "title": "Expiration date",
                                                            "type": "string"
                                                        },
                                                        "modification_date": {
                                                            "description": "The date and time that the object was last modified in a\nmeaningful way.",
                                                            "format": "date-time",
                                                            "title": "Last update",
                                                            "type": "string"
                                                        },
                                                        "publisher": {
                                                            "description": "The first unqualified Dublin Core 'Publisher' element value.",
                                                            "title": "Publisher",
                                                            "type": "string"
                                                        },
                                                        "tags": {
                                                            "description": "The unqualified Dublin Core 'Tags' element values",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "maxItems": 10000,
                                                            "title": "Tags",
                                                            "type": "array"
                                                        },
                                                        "title": {
                                                            "description": "The first unqualified Dublin Core 'Title' element value.",
                                                            "title": "Title",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "onna.canonical.behaviors.conversation.IConversation": {
                                                    "properties": {
                                                        "created_by": {
                                                            "items": {
                                                                "properties": {},
                                                                "title": "Thread created by",
                                                                "type": "object"
                                                            },
                                                            "maxItems": 100,
                                                            "title": "JSON Message",
                                                            "type": "array"
                                                        },
                                                        "thread_id": {
                                                            "title": "Conversation ID",
                                                            "type": "string"
                                                        },
                                                        "thread_name": {
                                                            "title": "Conversation name",
                                                            "type": "string"
                                                        },
                                                        "thread_type": {
                                                            "title": "Conversation type",
                                                            "type": "string"
                                                        },
                                                        "updated_by": {
                                                            "items": {
                                                                "properties": {},
                                                                "title": "Thread updated by",
                                                                "type": "object"
                                                            },
                                                            "maxItems": 100,
                                                            "title": "JSON Message",
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "onna.canonical.behaviors.following.IFollowing": {
                                                    "properties": {
                                                        "favorite": {
                                                            "title": "Current user has it favorited",
                                                            "type": "boolean"
                                                        },
                                                        "favorites": {
                                                            "items": {
                                                                "title": "follower",
                                                                "type": "string"
                                                            },
                                                            "maxItems": 10000,
                                                            "title": "favorites",
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "onna.canonical.behaviors.machine_learning.IMachineLearning": {
                                                    "properties": {
                                                        "classification": {
                                                            "items": {
                                                                "properties": {
                                                                    "model_version": {
                                                                        "type": "number"
                                                                    },
                                                                    "proba": {
                                                                        "type": "number"
                                                                    },
                                                                    "term": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "title": "term",
                                                                "type": "object"
                                                            },
                                                            "maxItems": 500,
                                                            "title": "Classification",
                                                            "type": "array"
                                                        },
                                                        "entities_company": {
                                                            "items": {
                                                                "minLength": 1,
                                                                "title": "company",
                                                                "type": "string"
                                                            },
                                                            "maxItems": 1000,
                                                            "title": "Company entities",
                                                            "type": "array"
                                                        },
                                                        "entities_email": {
                                                            "items": {
                                                                "minLength": 1,
                                                                "title": "email",
                                                                "type": "string"
                                                            },
                                                            "maxItems": 1000,
                                                            "title": "Email entities",
                                                            "type": "array"
                                                        },
                                                        "entities_location": {
                                                            "items": {
                                                                "minLength": 1,
                                                                "title": "location",
                                                                "type": "string"
                                                            },
                                                            "maxItems": 1000,
                                                            "title": "Location entities",
                                                            "type": "array"
                                                        },
                                                        "entities_other": {
                                                            "items": {
                                                                "additionalProperties": false,
                                                                "properties": {
                                                                    "end": {
                                                                        "type": "integer"
                                                                    },
                                                                    "entity": {
                                                                        "type": "string"
                                                                    },
                                                                    "score": {
                                                                        "type": "number"
                                                                    },
                                                                    "start": {
                                                                        "type": "integer"
                                                                    },
                                                                    "type": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "entity",
                                                                    "type",
                                                                    "score",
                                                                    "start",
                                                                    "end"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "maxItems": 1000,
                                                            "title": "Other Entities",
                                                            "type": "array"
                                                        },
                                                        "entities_person": {
                                                            "items": {
                                                                "minLength": 1,
                                                                "title": "person",
                                                                "type": "string"
                                                            },
                                                            "maxItems": 500,
                                                            "title": "Person entities",
                                                            "type": "array"
                                                        },
                                                        "extra_fields": {
                                                            "additionalProperties": {
                                                                "items": {
                                                                    "properties": {
                                                                        "boolean": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "comment": {
                                                                            "type": "string"
                                                                        },
                                                                        "confirmed": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "date": {
                                                                            "format": "date-time",
                                                                            "type": "string"
                                                                        },
                                                                        "float": {
                                                                            "type": "number"
                                                                        },
                                                                        "integer": {
                                                                            "type": "number"
                                                                        },
                                                                        "keyword": {
                                                                            "type": "string"
                                                                        },
                                                                        "text": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "maxItems": 100,
                                                                "type": "array"
                                                            },
                                                            "maxProperties": 500,
                                                            "properties": {},
                                                            "type": "object"
                                                        },
                                                        "language": {
                                                            "title": "Detected language",
                                                            "type": "string"
                                                        },
                                                        "nist": {
                                                            "title": "NIST file",
                                                            "type": "boolean"
                                                        },
                                                        "sentiment": {
                                                            "title": "Sentiment polarity",
                                                            "type": "number"
                                                        },
                                                        "sentiment_subjectivity": {
                                                            "title": "Sentiment subjectivity",
                                                            "type": "number"
                                                        },
                                                        "summary": {
                                                            "title": "Summary text extraction",
                                                            "type": "string"
                                                        },
                                                        "text_addition": {
                                                            "title": "Image recognition",
                                                            "type": "string"
                                                        },
                                                        "topification": {
                                                            "items": {
                                                                "properties": {
                                                                    "model_version": {
                                                                        "type": "number"
                                                                    },
                                                                    "proba": {
                                                                        "type": "number"
                                                                    },
                                                                    "term": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "title": "term",
                                                                "type": "object"
                                                            },
                                                            "maxItems": 500,
                                                            "title": "Topification",
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "onna.canonical.behaviors.metadata.IMetadata": {
                                                    "properties": {
                                                        "application_name": {
                                                            "title": "Application name",
                                                            "type": "string"
                                                        },
                                                        "author": {
                                                            "title": "Author",
                                                            "type": "string"
                                                        },
                                                        "company": {
                                                            "title": "Company",
                                                            "type": "string"
                                                        },
                                                        "content_hash": {
                                                            "title": "Content hash",
                                                            "type": "string"
                                                        },
                                                        "content_length": {
                                                            "title": "File size",
                                                            "type": "number"
                                                        },
                                                        "content_type": {
                                                            "title": "Content type",
                                                            "type": "string"
                                                        },
                                                        "date_created": {
                                                            "format": "date-time",
                                                            "title": "File creation",
                                                            "type": "string"
                                                        },
                                                        "date_modified": {
                                                            "format": "date-time",
                                                            "title": "File last modified",
                                                            "type": "string"
                                                        },
                                                        "duration": {
                                                            "title": "Duration",
                                                            "type": "number"
                                                        },
                                                        "extension": {
                                                            "title": "Extension",
                                                            "type": "string"
                                                        },
                                                        "extracted_text": {
                                                            "properties": {
                                                                "content_type": {
                                                                    "description": "The content type identifies the type of data.",
                                                                    "title": "Content Type",
                                                                    "type": "string"
                                                                },
                                                                "extension": {
                                                                    "title": "Extension of the file",
                                                                    "type": "string"
                                                                },
                                                                "filename": {
                                                                    "title": "Filename",
                                                                    "type": "string"
                                                                },
                                                                "md5": {
                                                                    "title": "MD5",
                                                                    "type": "string"
                                                                },
                                                                "size": {
                                                                    "title": "Size",
                                                                    "type": "number"
                                                                }
                                                            },
                                                            "title": "Extracted text",
                                                            "type": "object"
                                                        },
                                                        "first_sync_last": {
                                                            "title": "Last file of first sync",
                                                            "type": "boolean"
                                                        },
                                                        "md5": {
                                                            "title": "MD5 hash",
                                                            "type": "string"
                                                        },
                                                        "other_metadata": {
                                                            "properties": {},
                                                            "title": "Other document metadata",
                                                            "type": "object",
                                                            "x-dynamic": false
                                                        },
                                                        "processing_date": {
                                                            "title": "Processed in Onna",
                                                            "type": "string"
                                                        },
                                                        "processing_exception": {
                                                            "title": "Processing exception",
                                                            "type": "string"
                                                        },
                                                        "processing_title": {
                                                            "title": "File title",
                                                            "type": "string"
                                                        },
                                                        "resource_name": {
                                                            "title": "File name",
                                                            "type": "string"
                                                        },
                                                        "screenshot": {
                                                            "properties": {
                                                                "content_type": {
                                                                    "description": "The content type identifies the type of data.",
                                                                    "title": "Content Type",
                                                                    "type": "string"
                                                                },
                                                                "extension": {
                                                                    "title": "Extension of the file",
                                                                    "type": "string"
                                                                },
                                                                "filename": {
                                                                    "title": "Filename",
                                                                    "type": "string"
                                                                },
                                                                "md5": {
                                                                    "title": "MD5",
                                                                    "type": "string"
                                                                },
                                                                "size": {
                                                                    "title": "Size",
                                                                    "type": "number"
                                                                }
                                                            },
                                                            "title": "Screenshot",
                                                            "type": "object"
                                                        },
                                                        "thumbnail": {
                                                            "title": "Thumbnail",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "onna.canonical.behaviors.origin.IOrigin": {
                                                    "properties": {
                                                        "filter": {
                                                            "title": "Synced folder or label in source",
                                                            "type": "string"
                                                        },
                                                        "origin": {
                                                            "title": "URL to original file",
                                                            "type": "string"
                                                        },
                                                        "origin_created_by": {
                                                            "items": {
                                                                "properties": {},
                                                                "type": "object"
                                                            },
                                                            "maxItems": 1000,
                                                            "title": "List of creators in source",
                                                            "type": "array"
                                                        },
                                                        "origin_date_created": {
                                                            "format": "date-time",
                                                            "title": "Source {{type}} created on",
                                                            "type": "string"
                                                        },
                                                        "origin_date_modified": {
                                                            "format": "date-time",
                                                            "title": "Source {{type}} updated on",
                                                            "type": "string"
                                                        },
                                                        "origin_display_id": {
                                                            "title": "Source display id",
                                                            "type": "string"
                                                        },
                                                        "origin_exception": {
                                                            "title": "Exception",
                                                            "type": "string"
                                                        },
                                                        "origin_folder_path": {
                                                            "type": "string"
                                                        },
                                                        "origin_has_deletions": {
                                                            "title": "The resource includes deletions",
                                                            "type": "boolean"
                                                        },
                                                        "origin_has_editions": {
                                                            "title": "The resource includes editions",
                                                            "type": "boolean"
                                                        },
                                                        "origin_has_reactions": {
                                                            "title": "The resource includes reactions",
                                                            "type": "boolean"
                                                        },
                                                        "origin_id": {
                                                            "title": "Source {{type}} ID",
                                                            "type": "string"
                                                        },
                                                        "origin_is_archived": {
                                                            "title": "The resource was archived",
                                                            "type": "boolean"
                                                        },
                                                        "origin_label_ids": {
                                                            "items": {
                                                                "title": "Folder or label id",
                                                                "type": "string"
                                                            },
                                                            "maxItems": 5000,
                                                            "title": "Synced folder or label ID in source",
                                                            "type": "array"
                                                        },
                                                        "origin_md5": {
                                                            "title": "Source {{type}} MD5",
                                                            "type": "string"
                                                        },
                                                        "origin_modified_by": {
                                                            "items": {
                                                                "properties": {},
                                                                "type": "object"
                                                            },
                                                            "maxItems": 1000,
                                                            "title": "List of modifiers in source",
                                                            "type": "array"
                                                        },
                                                        "origin_other_metadata": {
                                                            "properties": {},
                                                            "title": "Other source metadata",
                                                            "type": "object",
                                                            "x-dynamic": false
                                                        },
                                                        "origin_related_users": {
                                                            "items": {
                                                                "properties": {},
                                                                "type": "object"
                                                            },
                                                            "maxItems": 5000,
                                                            "title": "Origin list of related users",
                                                            "type": "array"
                                                        },
                                                        "origin_resource_kind": {
                                                            "enum": [
                                                                "ticket/github.issue",
                                                                "ticket/github.pr",
                                                                "ticket/zendesk",
                                                                "conversation/slack.im",
                                                                "conversation/slack.mpim",
                                                                "conversation/slack.channel",
                                                                "conversation/slack.group",
                                                                "conversation/hangouts",
                                                                "conversation/twitter",
                                                                "post/workplace",
                                                                "post/twitter",
                                                                "channel/slack",
                                                                "meeting/zoom.meeting",
                                                                "meeting/zoom.instance",
                                                                "meeting/zoom.chat",
                                                                "meeting/zoom.transcript"
                                                            ],
                                                            "title": "Type of resource",
                                                            "type": "string"
                                                        },
                                                        "origin_server_modified": {
                                                            "format": "date-time",
                                                            "title": "Last modified in source",
                                                            "type": "string"
                                                        },
                                                        "origin_shared": {
                                                            "additionalProperties": false,
                                                            "properties": {
                                                                "is_link": {
                                                                    "default": false,
                                                                    "description": "Resource shared using public link",
                                                                    "type": "boolean"
                                                                },
                                                                "last_shared": {
                                                                    "description": "Resource shared date",
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "shared_by": {
                                                                    "description": "List of users sharing the resource",
                                                                    "items": {
                                                                        "properties": {},
                                                                        "type": "object"
                                                                    },
                                                                    "maxItems": 100,
                                                                    "type": "array"
                                                                },
                                                                "shared_with": {
                                                                    "description": "List of users with access permissions",
                                                                    "items": {
                                                                        "properties": {},
                                                                        "type": "object"
                                                                    },
                                                                    "maxItems": 100,
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "title": "Resource sharing information",
                                                            "type": "object"
                                                        },
                                                        "origin_state": {
                                                            "title": "Source state",
                                                            "type": "string"
                                                        },
                                                        "origin_targeted_users": {
                                                            "items": {
                                                                "title": "User",
                                                                "type": "string"
                                                            },
                                                            "maxItems": 5000,
                                                            "title": "List of users collected for",
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Resource data"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": [
                            "permission:guillotina.ViewContent"
                        ]
                    }
                ],
                "summary": "Retrieves serialization of resource",
                "tags": [
                    "Content"
                ]
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "servers": [
        {
            "url": "https://enterprise.onna.com/api"
        }
    ],
    "tags": [
        {
            "description": "### Manage User And Groups\n\nPlease read [Roles and permissions](https://developers.onna.com/overview/roles-and-permissions.html) for more information.",
            "name": "Account"
        },
        {
            "description": "### User And Group Authentication\n\nAuthentication requires that you have an Onna account.\n\nPlease consult the [developer documentation](https://developers.onna.com/tutorial/authentication.html) for more information.",
            "name": "Auth"
        },
        {
            "description": "### List, Search And Export Content\n\nPlease check our [support docs](https://support.onna.com/en/?q=content) for more information.",
            "name": "Content"
        },
        {
            "description": "### Search and related operations\n\nPlease consult the [reference documentation](https://developers.onna.com/formulas/search.html) for more information.",
            "name": "Search"
        },
        {
            "description": "### Manage and share workspaces\n\nWorkspaces are collaboration spaces in Onna.\nRead the [reference documentation](https://support.onna.com/en/articles/1151536-how-to-create-a-workspace) to learn more.",
            "name": "Workspace"
        }
    ]
}